generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  userTeam UserTeam[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model UserTeam {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId String
  players       Player[]    @relation("PlayerSelection")
  captain       Player?     @relation("Captain", fields: [captainId], references: [id])
  captainId     String?
  viceCaptain   Player?     @relation("ViceCaptain", fields: [viceCaptainId], references: [id])
  viceCaptainId String?
  points        Int         @default(0)

  @@unique([userId, competitionId])
}

enum SEASON {
  SEASON_2024
  SEASON_2025
  SEASON_2026
  SEASON_2027
}

model Season {
  id           String        @id @default(cuid())
  season       SEASON
  competitions Competition[]
}

model Competition {
  id        String     @id @default(cuid())
  name      String
  startDate DateTime?
  endDate   DateTime?
  deadline  DateTime?
  eventId   Int
  season    Season     @relation(fields: [seasonId], references: [id])
  seasonId  String
  userTeam  UserTeam[]
}

model Player {
  id            String     @id @default(cuid())
  name          String
  userTeam      UserTeam[] @relation("PlayerSelection")
  captainOf     UserTeam[] @relation("Captain")
  viceCaptainOf UserTeam[] @relation("ViceCaptain")
}
